version: "3.9"

services:
  backend:
    user: web
    build: .
    container_name: backend_container
    command: python3 start.py
    ports:
      - "8000:8000"
    env_file:
      - .env
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    volumes:
      - "kafka-data:/data/kafka/"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  clickhouse:
    image: clickhouse/clickhouse-server:21.8.11.4
    container_name: clickhouse
    hostname: clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./compose-services-data/clickhouse/node1:/etc/clickhouse-server
      - "clickhouse-data:/data/clickhouse/"
    depends_on:
      - zookeeper

volumes:
  kafka-data:
  clickhouse-data:

networks:
  default:
    name: ugc-network